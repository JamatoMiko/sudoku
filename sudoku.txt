LabelのTextを操作、labelをpanelに配置、panelを操作して画面遷移

・面をどう管理するか
問題と解の配列データを管理
イージー、ノーマル、ハード

・問題を作成
    ・埋められたマスを作る
        ・穴をあけて問題を解く、これを繰り返す
        ・難易度を評価
・問題を解く

盤面のデータ
・入っている数字
・行、列、ブロックごとの数字
・候補の数字
・候補の数字の数、これはメソッドでその都度カウントすればいい

指定した難易度（と全ての難易度からランダム、チェックボックスにする？）で問題を自動生成、エンドレスモード、解いた問題が保存されるように
問題の配列と、解くのにかかった時間などのデータを一括で管理

デイリー問題、全ての難易度から出題される可能性がある

問題を自作して保存できる機能、エディタ→ステージをこれで作る
全てのマスが埋まっている状態の盤面を自動生成する機能
コンピューターに解いてもらい難易度判定
自作した問題を呼び出して解ける機能

マスを全部埋めてから答え合わせするのと入力の度に判定するのがある、時間に制限か誤答の回数に制限で選べる、タイムを競うか正確性を競うか

メモ機能、ハイライト機能、入力し終えた数字をチェック、キーボード、コントローラーサポート
各種設定を保存するファイル

行（ヨコ）、列（タテ）、ブロック
・☑数字の入るマスを絞り込む方法（CRBE法）→単一候補法で良い
・マスに入る可能性のある数字の候補を絞り込む方法（ペンシルマーク）
　・☑単一候補法
　　1つのマスに1つの候補しか存在しない場合
　・☑単一マス法
　　行、列、ブロックごとに特定の数字の候補が1つのマスにしか存在しない場合
　・双子法
　　・独立双子法
　　・居候双子法
　・三つ子法
　　・独立三つ子法
　　・居候三つ子法
　・共有候補法
　　候補がブロック内で1つの行にしか存在しない場合、他のブロックのその行から候補が消える
　　同様にブロックから列を消す場合、行からブロックを消す場合、列からブロックを消す場合がある
　・対角線法
候補の数字が多いほど難易度が高い、問題を解くときに使った解法で難易度を評価
列、行、ブロックそれぞれに存在する数字を管理
マスごとに候補の数字を管理

・エディタを作る
　ステージをどうな形式で管理するか
　難易度別のフォルダ→ステージ番号？名前？がファイル名→問題と解の配列の入ったファイル
　フォルダを選択→ファイル名を選択
・ステージの読み込み

内臓のエディタと、ステージ作成用の外部のエディタを作る
表示と入力等の機能を流用
「問題として保存」「解答として保存」、問題と解答を同じファイルに
データに変換
保存先のフォルダを選択→ファイル名を入力

ステージを選択
イージー、ノーマル、ハード→データを読み込み、表示、入力、正誤判定
エンドレス→難易度を選択→データを生成、表示、入力、正誤判定
デイリー→ランダムな難易度でデータを生成、表示、入力、正誤判定

解答を生成→問題を生成

解いた問題の履歴を保存
モードごとに

Sudoku.comみたいにしてステージじゃなくする？